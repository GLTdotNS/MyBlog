declare const rules: {
    start: {
        include: string;
    }[];
    '#query': {
        include: string;
    }[];
    '#variable': {
        token: string;
        regex: RegExp;
    }[];
    '#keyword': {
        token: string;
        regex: RegExp;
    }[];
    '#comparison': {
        token: string;
        regex: RegExp;
    }[];
    '#operator': {
        token: string;
        regex: RegExp;
    }[];
    '#pipe': {
        token: string;
        regex: RegExp;
    }[];
    '#logical': {
        token: string;
        regex: RegExp;
    }[];
    '#reference': {
        token: string;
        regex: RegExp;
    }[];
    '#pair': ({
        include: string;
        token?: undefined;
        regex?: undefined;
    } | {
        token: string;
        regex: RegExp;
        include?: undefined;
    })[];
    '#arraylike': {
        token: string;
        regex: RegExp;
        push: ({
            token: string[];
            regex: RegExp;
            next: string;
            include?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
        })[];
    }[];
    '#array': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#range': {
        token: string[];
        regex: RegExp;
    }[];
    '#spread': {
        token: string;
        regex: RegExp;
        push: ({
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            include?: undefined;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
        })[];
    }[];
    '#array-values': ({
        include: string;
        token?: undefined;
        regex?: undefined;
    } | {
        token: string;
        regex: RegExp;
        include?: undefined;
    })[];
    '#filter': {
        include: string;
    }[];
    '#comments': {
        token: string[];
        regex: RegExp;
    }[];
    '#nullary-access-operator': {
        token: string;
        regex: RegExp;
    }[];
    '#constant': {
        token: string;
        regex: RegExp;
    }[];
    '#number': {
        token: string;
        regex: RegExp;
    }[];
    '#named-projection': {
        include: string;
    }[];
    '#projection': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            push?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            push?: undefined;
            defaultToken?: undefined;
        } | {
            token: string;
            regex: RegExp;
            push: ({
                token: string;
                regex: RegExp;
                next: string;
                include?: undefined;
                defaultToken?: undefined;
            } | {
                include: string;
                token?: undefined;
                regex?: undefined;
                next?: undefined;
                defaultToken?: undefined;
            } | {
                token: string;
                regex: RegExp;
                next?: undefined;
                include?: undefined;
                defaultToken?: undefined;
            } | {
                defaultToken: string;
                token?: undefined;
                regex?: undefined;
                next?: undefined;
                include?: undefined;
            })[];
            next?: undefined;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            token: string;
            regex: RegExp;
            next?: undefined;
            include?: undefined;
            push?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
            push?: undefined;
        })[];
    }[];
    '#string': {
        include: string;
    }[];
    '#double-string': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#single-string': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#objectkey': {
        include: string;
    }[];
    '#stringcontent': {
        token: string;
        regex: RegExp;
    }[];
    '#sort-pair': ({
        token: string[];
        regex: RegExp;
        push?: undefined;
    } | {
        token: string[];
        regex: RegExp;
        push: ({
            token: string[];
            regex: RegExp;
            next: string;
            include?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
        })[];
    })[];
    '#sort-order': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            token: string;
            regex: RegExp;
            next?: undefined;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#function-call': {
        include: string;
    }[];
    '#function-var-arg': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            token: string;
            regex: RegExp;
            next?: undefined;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#function-single-arg': {
        token: string;
        regex: RegExp;
        push: ({
            token: string;
            regex: RegExp;
            next: string;
            include?: undefined;
            defaultToken?: undefined;
        } | {
            include: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            defaultToken?: undefined;
        } | {
            defaultToken: string;
            token?: undefined;
            regex?: undefined;
            next?: undefined;
            include?: undefined;
        })[];
    }[];
    '#identifier': ({
        token: string[];
        regex: RegExp;
    } | {
        token: string;
        regex: RegExp;
    })[];
    '#value': {
        include: string;
    }[];
};
declare let ace: any;
//# sourceMappingURL=groq.d.ts.map